wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  #reboot_timeout: 0s
  #power_save_mode: light #NEVER enable this! IT does NOT stay ON
  #fast_connect: true
  #output_power: 18dB

  # This requires the esp32 esp-idf framework - most devices are older
  # # BSS Transition Management (802.11v) -  makes it possible for one BSS to steer clients to other BSSes
  # enable_btm: true
  # # Radio Resource Management (802.11k) -  enable clients to make better roaming decisions
  # enable_rrm: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret wifi_ap_ssid
    password: !secret wifi_ap_password

# Enable Home Assistant API
api:
  reboot_timeout: 0s
  password: !secret api_password

#mqtt:
#  broker: !secret mqtt_broker
#  port: !secret mqtt_port
#  username: !secret mqtt_user
#  password: !secret mqtt_password
  
ota:
  password: !secret ota_password

logger:
  #level: VERY_VERBOSE
  #level: INFO

web_server:
  #js_url: "https://rss.angelnu.com/scrapping/esphome.js"
  port: 80

time:
  - platform: homeassistant
    timezone: Europe/Berlin
  #- platform: sntp
  #  timezone: Europe/Berlin
    on_time:
      # Every 30 minutes
      - seconds: 0
        minutes: /30
        #hours: 4-6
        then:
          - lambda: |-
              if (wifi::global_wifi_component->wifi_rssi() < -70) {
                // PATCH: Reset old priorities for known networks
                for (auto &scan : wifi::global_wifi_component->get_scan_result()) {
                  if (wifi::global_wifi_component->has_sta_priority(scan.get_bssid())) {
                    wifi::global_wifi_component->set_sta_priority(scan.get_bssid(), 0);
                  }
                }
                // Rescan
                wifi::global_wifi_component->start_scanning();
              }

sensor:
  - platform: uptime
    name: ${sensorname} Uptime
    filters:
      - lambda: return x / 3600.0;
    unit_of_measurement: "hours"
    accuracy_decimals: 2
    update_interval: !secret uptime_update_interval